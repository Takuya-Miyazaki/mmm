{
  "Resources": {
    "MyStateMachine": {
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "\n",
            [
              "{",
              "    \"StartAt\": \"HelloWorld\",",
              "    \"States\": {",
              "        \"HelloWorld\": {",
              "            \"End\": true,",
              "            \"Result\": 1,",
              "            \"Type\": \"Pass\"",
              "        }",
              "    }",
              "}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::Sub": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/doesNotExist"
        },
        "StateMachineType": "STANDARD",
        "Tags": [
          {
            "Key": "stateMachine:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::StepFunctions::StateMachine"
    },
    "MyStateMachineAliastest": {
      "Properties": {
        "DeploymentPreference": {
          "StateMachineVersionArn": {
            "Ref": "MyStateMachineVersion"
          },
          "Type": "ALL_AT_ONCE"
        },
        "Name": "test"
      },
      "Type": "AWS::StepFunctions::StateMachineAlias"
    },
    "MyStateMachineApiEventRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "MyStateMachineAliastest"
                  }
                }
              ]
            },
            "PolicyName": "MyStateMachineApiEventRoleStartExecutionPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyStateMachineCWEvent": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "state": [
              "terminated"
            ]
          }
        },
        "Targets": [
          {
            "Arn": {
              "Ref": "MyStateMachineAliastest"
            },
            "Id": "MyStateMachineCWEventStepFunctionsTarget",
            "RoleArn": {
              "Fn::GetAtt": [
                "MyStateMachineCWEventRole",
                "Arn"
              ]
            }
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "MyStateMachineCWEventRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "MyStateMachineAliastest"
                  }
                }
              ]
            },
            "PolicyName": "MyStateMachineCWEventRoleStartExecutionPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyStateMachineCWSchedule": {
      "Properties": {
        "Description": "test schedule",
        "Name": "TestSchedule",
        "ScheduleExpression": "rate(1 minute)",
        "State": "DISABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "MyStateMachineAliastest"
            },
            "Id": "MyStateMachineCWScheduleStepFunctionsTarget",
            "RoleArn": {
              "Fn::GetAtt": [
                "MyStateMachineCWScheduleRole",
                "Arn"
              ]
            }
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "MyStateMachineCWScheduleRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "MyStateMachineAliastest"
                  }
                }
              ]
            },
            "PolicyName": "MyStateMachineCWScheduleRoleStartExecutionPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyStateMachineEBEvent": {
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.tag"
          ]
        },
        "Targets": [
          {
            "Arn": {
              "Ref": "MyStateMachineAliastest"
            },
            "Id": "MyStateMachineEBEventStepFunctionsTarget",
            "RoleArn": {
              "Fn::GetAtt": [
                "MyStateMachineEBEventRole",
                "Arn"
              ]
            }
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "MyStateMachineEBEventRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "MyStateMachineAliastest"
                  }
                }
              ]
            },
            "PolicyName": "MyStateMachineEBEventRoleStartExecutionPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyStateMachineScheduleEvent": {
      "Properties": {
        "FlexibleTimeWindow": {
          "Mode": "OFF"
        },
        "Name": "MyStateMachineScheduleEvent",
        "ScheduleExpression": "rate(1 minute)",
        "Target": {
          "Arn": {
            "Ref": "MyStateMachineAliastest"
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "MyStateMachineScheduleEventRole",
              "Arn"
            ]
          }
        }
      },
      "Type": "AWS::Scheduler::Schedule"
    },
    "MyStateMachineScheduleEventRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "scheduler.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "MyStateMachineAliastest"
                  }
                }
              ]
            },
            "PolicyName": "MyStateMachineScheduleEventStartExecutionPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyStateMachineVersion": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "StateMachineArn": {
          "Ref": "MyStateMachine"
        },
        "StateMachineRevisionId": {
          "Fn::GetAtt": [
            "MyStateMachine",
            "StateMachineRevisionId"
          ]
        }
      },
      "Type": "AWS::StepFunctions::StateMachineVersion",
      "UpdateReplacePolicy": "Retain"
    },
    "ServerlessRestApi": {
      "Properties": {
        "Body": {
          "info": {
            "title": {
              "Ref": "AWS::StackName"
            },
            "version": "1.0"
          },
          "paths": {
            "/path": {
              "get": {
                "responses": {
                  "200": {
                    "description": "OK"
                  },
                  "400": {
                    "description": "Bad Request"
                  }
                },
                "x-amazon-apigateway-integration": {
                  "credentials": {
                    "Fn::GetAtt": [
                      "MyStateMachineApiEventRole",
                      "Arn"
                    ]
                  },
                  "httpMethod": "POST",
                  "requestTemplates": {
                    "application/json": {
                      "Fn::Sub": "{\"input\": \"$util.escapeJavaScript($input.json('$'))\", \"stateMachineArn\": \"${MyStateMachineAliastest}\"}"
                    }
                  },
                  "responses": {
                    "200": {
                      "statusCode": "200"
                    },
                    "400": {
                      "statusCode": "400"
                    }
                  },
                  "type": "aws",
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartExecution"
                  }
                }
              }
            }
          },
          "swagger": "2.0"
        }
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "ServerlessRestApiDeploymente6166edbc7": {
      "Properties": {
        "Description": "RestApi deployment id: e6166edbc7b05836f53278af31642807c36e76b3",
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Stage"
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "ServerlessRestApiProdStage": {
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeploymente6166edbc7"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Prod"
      },
      "Type": "AWS::ApiGateway::Stage"
    }
  }
}
